# import * as test from "./generated/prisma.graphql"

type Query {
  me: User
  person(id: ID!): Person
  people( 
    where: PersonWhereInput,
    orderBy: PersonOrderByInput,
    skip: Int,
    after: String,
    before: String,
    first: Int,
    last: Int 
  ): [Person]
  role(id: ID!): Role
  roles: [Role]
}

type Mutation {
  createPerson(firstName: String!, lastName: String!, gender: Gender!, birthdate:DateTime!, 
    address: String!, roleId: ID!): Person
  updatePerson(id: ID!, firstName: String!, lastName: String!, gender: Gender!, birthdate:DateTime!, 
    address: String!, roleId: ID!): Person
  deletePerson(id: ID!): Person
  createRole(name: String!, description: String, ratePerHour: Int!): Role
  updateRole(id: ID!, name: String, description: String, ratePerHour: Int): Role
  deleteRole(id: ID!): Role
  signup(email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
}

type Subscription {
  rolesChanges: RoleSubscriptionPayload
  peopleChanges: PersonSubscriptionPayload
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
}